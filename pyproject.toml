[tool.poetry]
name = "mtapi"
version = "0.1.0"
description = "JSON proxy server for the MTA's realtime New York City subway feed"
authors = ["Jon Thornton <thornton.jon@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/jonthornton/MTAPI"
repository = "https://github.com/jonthornton/MTAPI.git"
documentation = "https://github.com/jonthornton/MTAPI/tree/master/docs"
packages = [
  { include = "mtapi" },
  { include =  "mtaproto" },
]
include = [
  { path = "data", format = ["sdist", "wheel"] },
]

[tool.poetry.dependencies]
python = "^3.10"
flask = "^2.2.2"
protobuf = "^4.21.10"
pytz = "^2022.6"
requests = "^2.28.1"
certifi = "^2022.9.24"
flask-rebar = "^2.3.0"
marshmallow-dataclass = {extras = ["enum", "union"], version = "^8.5.10"}
typeguard = "^2.13.3"
gunicorn = "^20.1.0"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
isort = "^5.10.1"
mypy = "^0.991"
mypy-protobuf = "^3.4.0"
types-protobuf = "^4.21.0.1"
types-pytz = "^2022.6.0.1"
types-requests = "^2.28.11.5"
types-psutil = "^5.9.5.5"
types-colorama = "^0.4.15.4"
types-cryptography = "^3.3.23.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
app = "mtapi.app:main"
make_stations_json = "scripts.make_stations_json:main"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.mypy]
plugins = "marshmallow_dataclass.mypy"
